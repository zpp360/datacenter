<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AppUserMapper">
    <select id="listUser" parameterType="pd" resultType="pd">
        SELECT
          if(d.datacenter_id is null,t.user_id,d.datacenter_id ) as user_id,
          t.user_phone,
          t.user_name,
          t.user_pic,
          t.user_sex,
          t.user_birthday,
          t.is_party,
          t.user_join_party_time,
          t.user_id_number,
          t.user_province,
          t.user_city,
          t.user_county,
          t.user_street,
          t.user_community,
          t.user_address,
          t.user_type,
          t.user_unit,
          t.del_flag,
          t.user_mz,
          t.user_department,
          t.user_job,
          t.user_score,
          t.office_phone,
          t.user_education,
          t.person_group,
          t.user_number,
          t.user_desc,
          t.user_die,
          h.del_flag as report_flag
        FROM  m_user t
        inner join m_unit n
        on t.user_unit = n.unit_id
        LEFT JOIN m_user_datacenter d
        on t.user_id = d.user_id
        LEFT JOIN m_user_address_history h on t.user_id = h.user_id
        LEFT JOIN m_user_address_history h1 on h.user_id = h1.user_id and h.insert_time <![CDATA[ < ]]> h1.insert_time
        where n.del_flg = '0'
        and h1.id_ is NULL
        and n.city = '171'
        and (t.user_status = '1' or t.user_status = '3')
        <if test="timestamp!=null and timestamp!=''">
            AND t.update_time <![CDATA[ > ]]> #{timestamp}
        </if>
        limit #{start},#{page_size}
    </select>

    <!--根据id查询-->
    <select id="findById" parameterType="java.lang.String" resultType="pd">
        select
          *
        from  m_user t
        where t.del_flag = '0'
        and t.user_id = #{userId}
    </select>
    <!--批量插入-->
    <insert id="batchSave" parameterType="java.util.List">
        insert into m_user(
          user_id,
          user_phone,
          user_name,
          user_sex,
          user_birthday,
          user_id_number,
          user_province,
          user_city,
          user_county,
          user_street,
          user_community,
          user_address,
          user_type,
          user_unit,
          user_mz,
          user_department,
          user_job,
          is_party,
          user_join_party_time,
          user_education,
          user_status,
          user_sort,
          del_flag,
          user_regist_time,
          insert_user,
          insert_time,
          update_user,
          update_time,
          phone_type,
          office_phone,
          person_group,
          hobbies
        ) values
        <foreach collection="list" item="item" index="index" separator="," >
            (
            #{item.user_id},
            #{item.mobilephone},
            #{item.user_name},
            #{item.gender},
            STR_TO_DATE(#{item.birthday},'%Y%m%d%H%i%s'),
            #{item.card_number},
            #{item.province},
            #{item.city},
            #{item.area},
            #{item.street},
            #{item.community},
            #{item.address},
            #{item.user_type},
            #{item.unit_id},
            #{item.nation},
            #{item.department},
            #{item.position},
            #{item.isdy},
            STR_TO_DATE(#{item.rd_time},'%Y%m%d%H%i%s'),
            #{item.education},
            '1',
            #{item.sortno},
            '0',
            now(),
            'datacenter',
            now(),
            'datacenter',
            now(),
            #{item.phone_type},
            #{item.home_telphone},
            #{item.person_group},
            #{item.interest}
            )
        </foreach>

    </insert>

    <!--批量更新-->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";" >
            update
            m_user
            <set>
                <if test="item.mobilephone != null and item.mobilephone">
                    user_phone = #{item.mobilephone},
                </if>
                <if test="item.user_name != null and item.user_name">
                    user_name = #{item.user_name},
                </if>
                <if test="item.gender != null and item.gender">
                    user_sex = #{item.gender},
                </if>
                <if test="item.birthday != null and item.birthday">
                    user_birthday = #{item.birthday},
                </if>
                <if test="item.card_number != null and item.card_number">
                    user_id_number = #{item.card_number},
                </if>
                <if test="item.user_type != null and item.user_type">
                    user_type = #{item.user_type},
                </if>
                <if test="item.unit_id != null and item.unit_id">
                    user_unit = #{item.unit_id},
                </if>
                <if test="item.nation != null and item.nation">
                    user_mz = #{item.nation},
                </if>
                <if test="item.position != null and item.position">
                    user_job = #{item.position},
                </if>
                <if test="item.isdy != null and item.isdy">
                    is_party = #{item.isdy},
                </if>
                <if test="item.rd_time != null and item.rd_time">
                    user_join_party_time = #{item.rd_time},
                </if>
                <if test="item.education != null and item.education">
                    user_education = #{item.education},
                </if>
                <if test="item.department != null and item.department">
                    user_department = #{item.department},
                </if>
                <if test="item.sortno != null and item.sortno">
                    user_sort = #{item.sortno},
                </if>
                <if test="item.phone_type != null and item.phone_type">
                    phone_type = #{item.phone_type},
                </if>
                <if test="item.home_telphone != null and item.home_telphone">
                    office_phone = #{item.home_telphone},
                </if>
                <if test="item.person_group != null and item.person_group">
                    person_group = #{item.person_group},
                </if>
                <if test="item.interest != null and item.interest">
                    hobbies = #{item.interest},
                </if>
                update_user = 'datacenter',
                update_time = now()
            </set>
            WHERE user_id = #{item.user_id}
        </foreach>

    </update>
    <!--批量删除-->
    <delete id="batchDel" parameterType="java.util.List">
        delete from m_user where user_id in (
        <foreach collection="list" item="item" index="index" separator=",">
            #{item.user_id}
        </foreach>
        )
    </delete>

    <!--根据手机号查询-->
    <select id="findByPhone" parameterType="pd" resultType="pd">
        select
          t.*,
	      v.volunteer_id
        from m_user t
        LEFT JOIN m_volunteer v
        on t.user_id = v.user_id
        where t.del_flag = '0'
        and t.user_phone = #{user_phone}
        <if test="user_id != null and user_id!=''">
             and t.user_id <![CDATA[ <> ]]> #{user_id}
        </if>
    </select>

    <!--根据身份证号码查询-->
    <select id="findByCardNumber" parameterType="pd" resultType="pd">
        select
          t.*,
	      v.volunteer_id
        from m_user t
        LEFT JOIN m_volunteer v
        on t.user_id = v.user_id
        where t.del_flag = '0'
        and t.user_id_number = #{user_id_number}
        <if test="user_id != null and user_id!=''">
            and t.user_id <![CDATA[ <> ]]> #{user_id}
        </if>
    </select>
    <!--批量居住地报到-->
    <insert id="batchReport" parameterType="java.util.List">
        insert into m_user_address_history(
			user_id,
			user_province,
			user_city,
			user_county,
			user_street,
			user_community,
			user_address,
			del_flag,
			insert_time,
			insert_user
    	)values
        <foreach collection="list" item="item" index="index" separator="," >
            (
            #{item.user_id},
            #{item.province},
            #{item.city},
            #{item.area},
            #{item.street},
            #{item.community},
            #{item.address},
            '1',
            now(),
            'datacenter'
            )
        </foreach>
    </insert>
    <!--居住地报到批量申请-->
    <insert id="checkBatchReport" parameterType="java.util.List">
        insert into m_user_address_history(
            user_id,
            user_province,
            user_city,
            user_county,
            user_street,
            user_community,
            user_address,
            del_flag,
            insert_time,
            insert_user
        )values
        <foreach collection="list" item="item" index="index" separator="," >
            (
            #{item.user_id},
            #{item.province},
            #{item.city},
            #{item.area},
            #{item.street},
            #{item.community},
            #{item.address},
            '0',
            now(),
            'datacenter'
            )
        </foreach>
    </insert>

    <select id="findByIdAndDelFlag" parameterType="java.lang.String" resultType="java.lang.Long">
        select
          count(1)
        from  m_user t
        where t.del_flag = '1'
        and t.user_id = #{userId}
    </select>

    <delete id="delDelFlagUser" parameterType="java.lang.String">
        delete from m_user where del_flag = '1' and user_id = #{userId}
    </delete>

    <select id="listAddUser" parameterType="pd" resultType="pd">
        SELECT
            t.user_id,
            t.user_phone,
            t.user_name,
            t.user_id_number,
            t.user_unit,
            n.unit_name_full as unit_name,
            t.user_type
        FROM  m_user t
        inner join m_unit n
        on t.user_unit = n.unit_id
        where n.del_flg = '0'
        and n.city = '171'
        and (t.user_status = '1' or t.user_status = '3')
        AND DATE_FORMAT(t.insert_time,'%Y-%m-%d') = #{date}
        and t.insert_user <![CDATA[ <> ]]> 'datacenter'
        limit #{start},#{page_size}
    </select>


    <select id="findUserReport" parameterType="pd" resultType="pd">
         select
          *
         from m_user_address_history t
         where t.user_id = #{user_id}
         and t.user_province = #{user_province}
         and t.user_city = #{user_city}
         and t.user_county = #{user_county}
         and t.user_street = #{user_street}
         and t.user_community = #{user_community}
         and t.user_address = #{user_address}
         and t.del_flag = #{del_flag}
    </select>


    <delete id="delUserReport" parameterType="pd">
        delete from m_user_address_history where user_id = #{user_id}
    </delete>
</mapper>